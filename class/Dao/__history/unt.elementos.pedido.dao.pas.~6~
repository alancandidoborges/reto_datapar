unit unt.elementos.pedido.dao;

interface

uses
  FireDAC.Comp.Client, System.SysUtils, unt.conexion.controller,
  unt.elementos.pedido, FireDAC.VCLUI.Wait, FireDAC.FMXUI.Wait,
  FireDAC.ConsoleUI.Wait, Generics.Collection;

type
  TElementosPedidoDAO = Class
  private
    FQuery: TFDQuery;
    FElementosPedido: TElementosPedido;
    Function BuscaCodigo: Integer;

  public
    function Load(ElementosPedidoID: Integer): TElementosPedido; overload;
    function Load: TFDQuery; overload;
    function LoadByPedodp(PedidoID: Integer): TObjectList<TElementosPedido>;

    function Insert(AElementosPedido: TElementosPedido): Integer;
    function Edit(AElementosPedido: TElementosPedido): Boolean;
    function Delete(UsuarioID: Integer): Boolean;

    Constructor Create;
    Destructor Destroy; override;
  End;

implementation

function TElementosPedidoDAO.BuscaCodigo: Integer;
begin
  FQuery.close;
  FQuery.Open('select max(id) as id from ElementosPedido');
  Result := FQuery.FieldByName('id').AsInteger;
end;

constructor TElementosPedidoDAO.Create;
begin
  FQuery := TConexionController.GetInstance().Conexion.CrearQuery;
  FElementosPedido := TElementosPedido.Create;
end;

function TElementosPedidoDAO.Delete(UsuarioID: Integer): Boolean;
begin
  FQuery.Close;
  FQuery.SQL.Clear;
  FQuery.SQL.Add('delete from ElementosPedido where id = ' + UsuarioID.ToString);
  FQuery.ExecSQL;
  Result := True;
end;

destructor TElementosPedidoDAO.Destroy;
begin
  FQuery.Close;
  FQuery           := nil;
  FElementosPedido := nil;
  FElementosPedido.DisposeOf;
  FQuery.DisposeOf;
  inherited;
end;

function TElementosPedidoDAO.Edit(AElementosPedido: TElementosPedido): Boolean;
var
  StrSql: string;
begin
  StrSql := 'update ElementosPedido set ';
  StrSql := StrSql + 'COD_PRODUCTO = '    + AElementosPedido.Producto.ID.ToString      + ', ';
  StrSql := StrSql + 'VALOR_UNITARIO = '  + FloatToStr(AElementosPedido.ValorUnitario) + ', ';
  StrSql := StrSql + 'VALOR_TOTAL = '     + FloatToStr(AElementosPedido.ValorTotal)    + ', ';
	StrSql := StrSql + 'CANTIDAD = '        + FloatToStr(AElementosPedido.Cantidad)      + ', ';
  StrSql := StrSql + 'where id = '        + AElementosPedido.ID.ToString;
  FQuery.Close;
  FQuery.SQL.Clear;
  FQuery.SQL.Add(StrSql);
  FQuery.ExecSQL;
  Result := True;
end;

function TElementosPedidoDAO.Insert(AElementosPedido: TElementosPedido): Integer;
var
  StrSql: string;
begin
  StrSql := 'INSERT INTO ElementosPedido(COD_PRODUCTO, VALOR_UNITARIO, VALOR_TOTAL, CANTIDAD)';
  StrSql := StrSql + 'VALUES( ';
  StrSql := StrSql + AElementosPedido.Producto.ID.ToString      + ', ';
  StrSql := StrSql + FloatToStr(AElementosPedido.ValorUnitario) + ', ';
  StrSql := StrSql + FloatToStr(AElementosPedido.ValorTotal)    + ', ';
  StrSql := StrSql + FloatToStr(AElementosPedido.Cantidad);
  FQuery.close;
  FQuery.SQL.Clear;
  FQuery.ExecSQL(StrSql);
  Result := BuscaCodigo();
end;

function TElementosPedidoDAO.Load: TFDQuery;
begin
  try
    FQuery.Open('select * from ElementosPedido order by id, nome');
    Result := FQuery;
  finally
    //FQuery.Close;
  end;
end;

function TElementosPedidoDAO.Load(ElementosPedidoID: Integer): TElementosPedido;
begin
  try
    FQuery.Open('select * from ElementosPedido where id = :id', [ElementosPedidoID]);
    if FQuery.RecordCount <> 0 then
    begin
      FElementosPedido.id            := FQuery.FieldByName('ID').Value;
      FElementosPedido.Producto.ID   := FQuery.FieldByName('COD_PRODUCTO').Value;
      FElementosPedido.ValorUnitario := FQuery.FieldByName('VALOR_UNITARIO').Value;
      FElementosPedido.ValorTotal    := FQuery.FieldByName('VALOR_TOTAL').Value;
      FElementosPedido.Cantidad      := FQuery.FieldByName('CANTIDAD').Value;
      Result := FElementosPedido;
    end;
  finally
    FQuery.Close;
  end;
end;

end.
